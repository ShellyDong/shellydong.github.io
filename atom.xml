<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Shelly's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://shellydong.github.io/"/>
  <updated>2015-12-24T15:56:58.492Z</updated>
  <id>http://shellydong.github.io/</id>
  
  <author>
    <name><![CDATA[Shelly Dong]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[写给文科生的Markdown新手教程]]></title>
    <link href="http://shellydong.github.io/2015/12/24/Markdown-tutorial-for-blogger/"/>
    <id>http://shellydong.github.io/2015/12/24/Markdown-tutorial-for-blogger/</id>
    <published>2015-12-24T14:05:24.000Z</published>
    <updated>2015-12-24T15:56:58.492Z</updated>
    <content type="html"><![CDATA[<h3 id="如果你关心的是内容以外的东西，可以不用往下看了">如果你关心的是内容以外的东西，可以不用往下看了</h3><p>例如：</p>
<ol>
<li>你很注重样式，需要各种图文混排等复杂的排版。</li>
<li>你需要将文档以非web page的形式输出给客户使用。</li>
</ol>
<h3 id="为什么你该试试Markdown？">为什么你该试试Markdown？</h3><ol>
<li>够酷    </li>
<li>简单，文本编辑器就可以打开，修改起来非常方便，格式也足够简单、清晰。</li>
<li>专注，让你可以关注内容本身，而不是样式。不再需要像Word一样不停地点击按钮设置格式。</li>
<li>易发布，只要站点支持Markdown，你可以轻松地将文档用同样地格式发布到多个站点上。</li>
<li>易于版本管控，像管控代码版本一样管控文档，任何的增删改都有记录可循，再也不怕因为意外导致文档丢失了。<a id="more"></a>
</li>
</ol>
<h3 id="那要怎么开始呢？">那要怎么开始呢？</h3><ul>
<li>Step1. 下载<a href="http://markdownpad.com/" target="_blank" rel="external">MarkdownPad2</a>。即时预览，看得到的才有安全感。<br><img src="http://markdownpad.com/img/markdownpad2.png" alt=""></li>
<li>Step2. 看看语法介绍，然后一步步跟着试一下吧。当然，如果你完全没有耐心，也可以跳过这一步，直接进入下一步尝鲜阶段。<ul>
<li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">简体中文版</a></li>
<li><a href="http://markdown.tw/" target="_blank" rel="external">繁體中文版</a></li>
<li><a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">English</a></li>
</ul>
</li>
<li><p>Step3. 把下面的一段文字复制粘贴到MarkdownPad2中，看看效果是不是和你想象的一样呢？</p>
  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">## 酷酷的骚年都在用Markdown，你呢？ ##</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**重要的事情不止要说三遍，还要加粗！**</span> 这种细细的字体是没有人会在意的。</span><br><span class="line">如果我想换行，这样是不行的。</span><br><span class="line"></span><br><span class="line">空一行才是真的换行，我猜是因为这样才能保持源文件的格式足够清晰。</span><br><span class="line"></span><br><span class="line"><span class="header">### 标题党都喜欢这玩意儿 ###</span></span><br><span class="line"></span><br><span class="line"><span class="header">### 其实没有后面的尾巴我也不会报错的，想偷懒的话就尽情地省略吧</span></span><br><span class="line"></span><br><span class="line"><span class="header">###### 接下来是完美的分割线</span></span><br><span class="line"><span class="horizontal_rule">---</span></span><br><span class="line">你觉得我完美吗？</span><br><span class="line"></span><br><span class="line"><span class="horizontal_rule">---这样就不完美了呢</span></span><br><span class="line"></span><br><span class="line">现在你开始喜欢它了吗？</span><br><span class="line"></span><br><span class="line">多尝试一下快捷键吧:</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span><span class="strong">**我很粗大**</span> (<span class="code">`Ctrl+B`</span>) </span><br><span class="line"><span class="bullet">- </span><span class="emphasis">*歪歪斜斜*</span> (<span class="code">`Ctrl+I`</span>)</span><br><span class="line"><span class="bullet">- </span>接下来是引用</span><br><span class="line"><span class="code">	&gt; 大家好，我是引用 (`Ctrl+Q`)</span></span><br><span class="line"><span class="bullet">- </span>码农最爱的<span class="code">`代码块（看清楚，我就是代码块了，我可是自带背景色的高端角色哦）`</span> (<span class="code">`Ctrl+K`</span>)</span><br><span class="line"><span class="bullet">- </span>标题 1, 2, 3 (<span class="code">`Ctrl+1`</span>, <span class="code">`Ctrl+2`</span>, <span class="code">`Ctrl+3`</span>)</span><br><span class="line"><span class="bullet">- </span>列表（就好像你看到的这一大块清单） (<span class="code">`Ctrl+U`</span> and <span class="code">`Ctrl+Shift+O`</span>)</span><br><span class="line"></span><br><span class="line"><span class="header">### 链接也是so easy的哦 ###</span></span><br><span class="line"></span><br><span class="line">让我为你打开超级传送门。[<span class="link_label">我就是传送门，点我会去百度哦</span>](<span class="link_url">http://baidu.com</span>) </span><br><span class="line"></span><br><span class="line"><span class="header">### 图片也是轻轻松松 ###</span></span><br><span class="line"></span><br><span class="line">![<span class="link_label">完美的图片呢，不过我写在这里有什么用呢，观众朋友们又看不见。但是作者我需要备注下这个链接指的是哪个该死的图片呀，所以我一般会在这里写上“x年x月x日x地点xxxxx”（xxxxx得是有意义的图片名）</span>](<span class="link_url">http://markdownpad.com/img/markdownpad2.png</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Step4. 快开始写下第一篇自己的Markdown版本博客吧。</p>
</li>
</ul>
<h3 id="所以，你学会了吗？">所以，你学会了吗？</h3>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="如果你关心的是内容以外的东西，可以不用往下看了">如果你关心的是内容以外的东西，可以不用往下看了</h3><p>例如：</p>
<ol>
<li>你很注重样式，需要各种图文混排等复杂的排版。</li>
<li>你需要将文档以非web page的形式输出给客户使用。</li>
</ol>
<h3 id="为什么你该试试Markdown？">为什么你该试试Markdown？</h3><ol>
<li>够酷    </li>
<li>简单，文本编辑器就可以打开，修改起来非常方便，格式也足够简单、清晰。</li>
<li>专注，让你可以关注内容本身，而不是样式。不再需要像Word一样不停地点击按钮设置格式。</li>
<li>易发布，只要站点支持Markdown，你可以轻松地将文档用同样地格式发布到多个站点上。</li>
<li>易于版本管控，像管控代码版本一样管控文档，任何的增删改都有记录可循，再也不怕因为意外导致文档丢失了。]]>
    
    </summary>
    
      <category term="Markdown" scheme="http://shellydong.github.io/tags/Markdown/"/>
    
      <category term="Inbox" scheme="http://shellydong.github.io/categories/Inbox/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何在MacOS搭建Android开发环境]]></title>
    <link href="http://shellydong.github.io/2015/11/20/How-to-setup-Android-development-environment-on-MacOS/"/>
    <id>http://shellydong.github.io/2015/11/20/How-to-setup-Android-development-environment-on-MacOS/</id>
    <published>2015-11-20T07:40:30.000Z</published>
    <updated>2015-11-20T08:50:27.222Z</updated>
    <content type="html"><![CDATA[<h3 id="准备安装包">准备安装包</h3><ol>
<li>由于eclipse使用的是Java 6，因此需要从苹果官网下载<a href="https://support.apple.com/kb/DL1572?locale=zh_CN&amp;viewlocale=zh_CN" target="_blank" rel="external">支持包</a>。</li>
<li>下载JDK，可以选择从Oracle官网或者<a href="http://www.androiddevtools.cn" target="_blank" rel="external">AndroidDevTools</a>下载，选择Mac OSX的1.8u5版本即可。</li>
<li><p>下载Android SDK，这里我是从<a href="http://www.androiddevtools.cn" target="_blank" rel="external">AndroidDevTools</a>下载ADT Bundle，选择Mac OSX的64位23.0.2即可。</p>
<a id="more"></a>
<h3 id="环境变量配置">环境变量配置</h3></li>
<li><p>查看Java安装路径: <code>/usr/libexec/java_home -V</code><br><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151120160216.png" alt=""></p>
</li>
<li><p>添加Java环境变量</p>
<ul>
<li><p>全局配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/profile</span><br><span class="line"><span class="comment">#配置JAVA_HOME，此处路径根据自己的版本填写</span></span><br><span class="line">JAVA_HOME=<span class="string">"/System/Library/Java/JavaVirtualMachines/1.8.0_05.jdk/Contents/Home/"</span></span><br><span class="line">CLASS_PATH=<span class="string">"<span class="variable">$JAVA_HOME</span>/lib"</span></span><br><span class="line"><span class="comment">#把JAVA添加到到环境变量PATH中</span></span><br><span class="line">PATH=<span class="string">".:<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin"</span></span><br><span class="line"><span class="comment">#设置tomcat的主目录</span></span><br><span class="line"><span class="comment">#CATALINA_HOME="/usr/local/tomcat"（tomcat需自行提前安装好）</span></span><br><span class="line"><span class="comment">#将JAVA_HOME和CATALINA_HOME设置为环境变量</span></span><br><span class="line"><span class="comment">#export JAVA_HOME CATALINA_HOME</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME</span><br></pre></td></tr></table></figure>
</li>
<li><p>针对用户配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入用户主目录，然后看一下有没有.bash_profile文件</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">ls -all</span><br><span class="line"><span class="comment">#编辑.bash_profile文件(没有则新建，命令touch .bash_profile)</span></span><br><span class="line">vim .bash_profile</span><br><span class="line"><span class="comment">#英文模式下，按一下i键进入编辑模式，输入以下内容，路径部分自己粘贴自己的</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.<span class="number">8.0</span>_05.jdk/Contents/Home</span><br><span class="line"><span class="comment">#输完后，按esc，输入:wq!保存</span></span><br><span class="line"><span class="comment">#source命令使profile立即生效</span></span><br><span class="line"><span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>添加Android SDK环境变量</p>
<ul>
<li><p>全局配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/profile</span><br><span class="line"><span class="comment">#配置ANDROID_HOME，此处路径根据自己的版本填写</span></span><br><span class="line">ANDROID_HOME=/Users/blue/Downloads/adt-bundle/sdk</span><br><span class="line"><span class="built_in">export</span> ANDROID_HOME</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools:<span class="variable">$ANDROID_HOME</span>/platform-tools</span><br></pre></td></tr></table></figure>
</li>
<li><p>针对用户配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入用户主目录，然后看一下有没有.bash_profile文件</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">ls -all</span><br><span class="line"><span class="comment">#编辑.bash_profile文件(没有则新建，命令touch .bash_profile)</span></span><br><span class="line">vim .bash_profile</span><br><span class="line"><span class="comment">#英文模式下，按一下i键进入编辑模式，输入以下内容，路径部分自己粘贴自己的</span></span><br><span class="line">ANDROID_HOME=/Users/blue/Downloads/adt-bundle/sdk</span><br><span class="line"><span class="built_in">export</span> ANDROID_HOME</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools:<span class="variable">$ANDROID_HOME</span>/platform-tools</span><br><span class="line"><span class="comment">#输完后，按esc，输入:wq!保存</span></span><br><span class="line"><span class="comment">#source命令使profile立即生效</span></span><br><span class="line"><span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="准备安装包">准备安装包</h3><ol>
<li>由于eclipse使用的是Java 6，因此需要从苹果官网下载<a href="https://support.apple.com/kb/DL1572?locale=zh_CN&amp;viewlocale=zh_CN">支持包</a>。</li>
<li>下载JDK，可以选择从Oracle官网或者<a href="http://www.androiddevtools.cn">AndroidDevTools</a>下载，选择Mac OSX的1.8u5版本即可。</li>
<li><p>下载Android SDK，这里我是从<a href="http://www.androiddevtools.cn">AndroidDevTools</a>下载ADT Bundle，选择Mac OSX的64位23.0.2即可。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://shellydong.github.io/tags/Android/"/>
    
      <category term="Apple" scheme="http://shellydong.github.io/tags/Apple/"/>
    
      <category term="Mac" scheme="http://shellydong.github.io/tags/Mac/"/>
    
      <category term="Apple" scheme="http://shellydong.github.io/categories/Apple/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何为MacOS添加新的环境变量]]></title>
    <link href="http://shellydong.github.io/2015/11/19/How-to-add-environment-variables-on-MacOS/"/>
    <id>http://shellydong.github.io/2015/11/19/How-to-add-environment-variables-on-MacOS/</id>
    <published>2015-11-19T08:38:04.000Z</published>
    <updated>2015-11-20T07:42:18.044Z</updated>
    <content type="html"><![CDATA[<p>具体步骤如下：</p>
<ol>
<li>打开Terminal，输入<code>sudo vim /etc/profile</code>，此时将进入vi编辑界面</li>
<li>按下[i]键进入Insert模式，插入如下代码<br> <code>ANDROID_HOME=/Users/xxx/desktop/sdk</code></li>
<li>按Esc键进入Command模式， 输入<code>:wq!</code>保存并强制退出。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>具体步骤如下：</p>
<ol>
<li>打开Terminal，输入<code>sudo vim /etc/profile</code>，此时将进入vi编辑界面</li>
<li>按下[i]键进入Insert模式，插入如下代码<br> <code>ANDROID_HOME=]]>
    </summary>
    
      <category term="Apple" scheme="http://shellydong.github.io/tags/Apple/"/>
    
      <category term="Mac" scheme="http://shellydong.github.io/tags/Mac/"/>
    
      <category term="iOS" scheme="http://shellydong.github.io/tags/iOS/"/>
    
      <category term="Apple" scheme="http://shellydong.github.io/categories/Apple/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Appium使用指引]]></title>
    <link href="http://shellydong.github.io/2015/11/17/Appium-Get-Started/"/>
    <id>http://shellydong.github.io/2015/11/17/Appium-Get-Started/</id>
    <published>2015-11-17T10:24:15.000Z</published>
    <updated>2015-11-17T10:26:17.550Z</updated>
    <content type="html"><![CDATA[<ol>
<li>启动程序<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117175555.png" alt="启动成功"><a id="more"></a></li>
<li>设置capabilities<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117175634.png" alt="设置参数"></li>
<li>启动Server<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117175706.png" alt="启动中"></li>
<li>启动Inspector<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117175831.png" alt="启动中"><br><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117175848.png" alt="启动成功"></li>
<li>刷新界面<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117175930.png" alt="刷新成功"></li>
<li><p>开始测试</p>
<ul>
<li><p>从Android Studio直接开始测试</p>
<p><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117180018.png" alt="右键菜单选择测试"></p>
</li>
<li><p>使用命令行启动测试</p>
<p><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117181042.png" alt="启动单个测试"></p>
</li>
</ul>
</li>
</ol>
<p>需要注意Appium每一个测试都会清除data &amp; cache，保证各个case之间不会互相干扰。测试完成后会在命令行输出测试结果。</p>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li>启动程序<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/QQ截图20151117175555.png" alt="启动成功">]]>
    
    </summary>
    
      <category term="Android" scheme="http://shellydong.github.io/tags/Android/"/>
    
      <category term="Appium" scheme="http://shellydong.github.io/tags/Appium/"/>
    
      <category term="Automation" scheme="http://shellydong.github.io/tags/Automation/"/>
    
      <category term="IOS" scheme="http://shellydong.github.io/tags/IOS/"/>
    
      <category term="Test" scheme="http://shellydong.github.io/tags/Test/"/>
    
      <category term="Android" scheme="http://shellydong.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Appium环境搭建]]></title>
    <link href="http://shellydong.github.io/2015/11/17/Appium-Develop-Environment-Set-Up/"/>
    <id>http://shellydong.github.io/2015/11/17/Appium-Develop-Environment-Set-Up/</id>
    <published>2015-11-17T09:24:15.000Z</published>
    <updated>2015-11-17T10:35:40.412Z</updated>
    <content type="html"><![CDATA[<p>Appium目前较流行移动自动化测试框架。</p>
<h2 id="Windows">Windows</h2><p>安装依赖库</p>
<ol>
<li>安装 nodejs v0.10 版本及以上，可通过官方的安装程序来安装。<br> 测试安装是否成功：运行cmd，输入node -v <a id="more"></a></li>
<li><p>安装android的SKD<br> 安装android的sdk包(<a href="http://developer.android.com/sdk/index.html),运行依赖sdk中的" target="_blank" rel="external">http://developer.android.com/sdk/index.html),运行依赖sdk中的</a> ‘android’工具。并确保你安装了Level17或以上的版本api。</p>
<p> 设置ANDROID_HOME 系统变量为你的 Android SDK 路径，并把tools和platform-tools两个目录加入到系统的 Path路径里。</p>
<pre><code>变量： ANDROID_HOME

  值： D:\android-sdk

设置： Path

  值： <span class="variable">%ANDROID_HOME</span><span class="variable">%\</span>platform-tools;<span class="variable">%ANDROID_HOME</span><span class="variable">%\</span>tools;
</code></pre></li>
<li><p>安装Apache Ant（可选）<br> 安装Apache Ant（<a href="http://ant.apache.org/bindownload.cgi）" target="_blank" rel="external">http://ant.apache.org/bindownload.cgi）</a></p>
<p> 解压缩文件夹，并把路径加入环境变量。</p>
<pre><code>变量： ANT_HOME

  值： D:\apache-ant-<span class="number">1</span>.<span class="number">8</span>.<span class="number">2</span>

设置： <span class="built_in">Path</span>

  值： <span class="envvar">%ANT_HOME%</span>\bin 
</code></pre><p> 测试ant环境安装成功：运行cmd，输入ant，如果没有指定build.xml就会输出：</p>
<p>  Buildfile: build.xml does not exist!</p>
<p>  Build failed</p>
</li>
<li><p>安装JDK</p>
<p> 下载解压文件夹 并且设置 M2HOME 和 M2 环境变量，把 M2 环境变量添加到你的系统PATH变量中。 </p>
<pre><code>变量： JAVA_HOME

  值： C:\Program Files (x86)\Java\jdk1.7.0_01

变量： classpath

  值： <span class="variable">%JAVA_HOME</span><span class="variable">%\</span>lib;

设置： Path

  值： <span class="variable">%JAVA_HOME</span><span class="variable">%\</span>bin;<span class="variable">%JAVA_HOME</span><span class="variable">%\</span>jre\bin;
</code></pre><p>测试环境安装成功：运行cmd，输入java -version 如果成功则出现java信息。</p>
</li>
<li><p>安装Apache Maven<br> 安装Maven（<a href="http://maven.apache.org/download.cgi）" target="_blank" rel="external">http://maven.apache.org/download.cgi）</a></p>
<p> 下载解压文件夹 并且设置 M2HOME 和 M2 环境变量，把 M2 环境变量添加到你的系统PATH变量中。 </p>
<pre><code>变量： MAVEN_HOME

  值： D:\apache-maven-<span class="number">3</span>.<span class="number">1</span>.<span class="number">1</span>

设置： <span class="built_in">Path</span>:

  值： <span class="envvar">%MAVEN_HOME%</span>\bin 
</code></pre><p>测试环境安装成功：运行cmd，输入mvn -v 如果成功则出现maven信息。</p>
</li>
</ol>
<p>Appium提供两种方式进行安装:</p>
<ul>
<li>下载 AppiumForWindows，解压后即完成安装，<a href="https://bitbucket.org/appium/appium.app/downloads/" target="_blank" rel="external">下载地址</a></li>
<li><p>命令行输入相关命令安装</p>
<p>  <code>运行 npm install -g appium 安装 appium</code></p>
</li>
</ul>
<p>验证 appium：在命令行输入appium-doctor,如果结果如下，证明 环境搭建成功<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/20151117001.png" alt="appium-doctor result"></p>
<h2 id="Mac_OS_(待后补)">Mac OS (待后补)</h2><h1 id="参考资料">参考资料</h1><ol>
<li><a href="http://appium.io/" target="_blank" rel="external">Appium官网</a></li>
<li><a href="https://appium.testerhome.com/" target="_blank" rel="external">TesterHome Appium中文教程</a></li>
<li><a href="https://github.com/appium/appium" target="_blank" rel="external">Github Appium开源项目代码</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>Appium目前较流行移动自动化测试框架。</p>
<h2 id="Windows">Windows</h2><p>安装依赖库</p>
<ol>
<li>安装 nodejs v0.10 版本及以上，可通过官方的安装程序来安装。<br> 测试安装是否成功：运行cmd，输入node -v]]>
    
    </summary>
    
      <category term="Android" scheme="http://shellydong.github.io/tags/Android/"/>
    
      <category term="Appium" scheme="http://shellydong.github.io/tags/Appium/"/>
    
      <category term="Automation" scheme="http://shellydong.github.io/tags/Automation/"/>
    
      <category term="IOS" scheme="http://shellydong.github.io/tags/IOS/"/>
    
      <category term="Test" scheme="http://shellydong.github.io/tags/Test/"/>
    
      <category term="Android" scheme="http://shellydong.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to write well]]></title>
    <link href="http://shellydong.github.io/2015/07/28/How-to-write-well/"/>
    <id>http://shellydong.github.io/2015/07/28/How-to-write-well/</id>
    <published>2015-07-28T14:15:38.000Z</published>
    <updated>2015-07-28T14:15:38.158Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[读书清单回顾@2015年]]></title>
    <link href="http://shellydong.github.io/2015/07/15/Talk-about-my-reading-list-at-2015/"/>
    <id>http://shellydong.github.io/2015/07/15/Talk-about-my-reading-list-at-2015/</id>
    <published>2015-07-15T10:26:38.000Z</published>
    <updated>2015-09-10T04:00:34.041Z</updated>
    <content type="html"><![CDATA[<p>到今天为止，豆瓣上的已读总算凑到了102本。<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/20150715_douban_read.jpg" alt=""><br><a id="more"></a><br>阅读的内容并不仅止于此。年少时最喜欢的是期刊，尤其钟爱武侠，是《今古传奇》的粉丝。工作后由于程序猿这份工的特殊性喜欢上了RSS。最开始是在Google Reader根据周金根分享的OPML删删改改定制了一份属于自己的清单，Google Reader服务关闭后，先是尝试了Feedly，感觉还不错，后来实在翻墙困难，只能在每台电脑上安装FeedDemon。 OPML文件后来也翻新了几次，曾经很喜欢的一些Blog都断更了，实在可惜。<br>我最近的OPML文件，有兴趣的同学可以点<a href="http://pan.baidu.com/s/1c0CqXUS" target="_blank" rel="external">这里</a>下载。</p>
<p>接下来就随便列一列今年看过的那些书吧。</p>
<p><img src="http://img4.douban.com/lpic/s6862076.jpg" alt=""><br>开年的时候，因为决定要换工作到移动开发阵营，通过这本《疯狂Java讲义》重新梳理了一遍Java的基础知识。</p>
<p><img src="http://img3.douban.com/lpic/s4249614.jpg" alt=""><br>大约是还没有过为赋新词强说愁的年纪，过年的时候进入了某种关系摧毁的阶段，为了引导积极情绪，保持身心健康，这本书我反反复复看了好几遍。Everybody has blue days, everybody deserves a <em>The Blue Day Book</em>。这是一本以后一定要给小孩子买的书，希望那些忧伤的日子因为这本书变得不那么难熬。</p>
<p><img src="http://img3.douban.com/lpic/s1800355.jpg" alt=""><br>接下来，大脑自行切入反省模式，需要反思一下造成这种局面的原因。因为旧年数次在火车上围观黄老先生的《历代政治得失》和《国史大纲》颇得其乐，这一次便仍是选择了一本他老人家的名作《万历十五年》。对万历皇帝、张居正、申时行、海瑞、戚继光、李贽这些人的初步印象，均从此书得来，而且此书愈读愈心惊，虽然说不上来具体的原因，但对于历史重复上演莫名心生出来一些恐惧。</p>
<p><img src="http://img4.douban.com/lpic/s1436379.jpg" alt=""><br>这是今年读到的最惊喜的一本，《心是孤独的猎手》。因为去年刚好读过蒋勋的《孤独六讲》，对于孤独尤其是孤独的美感的认知，已经入过门。但是这一本书用另外一种意想不到的表现手法来呈现孤独，而且可能由于主角是哑巴的缘故，视觉聚焦效果好到令人惊叹。读完这本书后，我开始相信每一个人都是绝对孤独。</p>
<p><img src="http://img3.douban.com/lpic/s2121681.jpg" alt=""><br><img src="http://img4.douban.com/lpic/s6252848.jpg" alt=""><br><img src="http://img3.douban.com/lpic/s4339900.jpg" alt=""><br><img src="http://img3.douban.com/lpic/s7082600.jpg" alt=""><br><img src="http://img4.douban.com/lpic/s4533799.jpg" alt=""><br><img src="http://img4.douban.com/lpic/s6641009.jpg" alt=""><br><img src="http://img4.douban.com/lpic/s4240009.jpg" alt=""><br><img src="http://img3.douban.com/lpic/s26813160.jpg" alt=""><br><img src="http://img3.douban.com/lpic/s10478970.jpg" alt=""><br>经过上一本书的洗礼，我进入对于情感这一事物认知摧毁再重建的阶段，这一阶段完成之前情商低得可怕。只能试图借着读书这件事情麻痹自己，让自己不要陷得更深。因此快速浏览终结了这些看了很久却一直没能看完的“著述”。</p>
<p><img src="http://img4.douban.com/lpic/s3993878.jpg" alt=""><br>等我醒过神来的时候，已经在看这一本书了，龙应台应该是我近年最喜爱的作家了，一本《野火集》，一本《目送》，都是一口气读完，但是最喜欢的，可能还是《大江大海》。</p>
<p><img src="http://img3.douban.com/lpic/s3679561.jpg" alt=""><br>这一本诗集只用了很短的时间就翻完，不知道是翻译的问题还是其他，读完还是无法感知到诗人的想法，有一丝挫败。打算留待几年后再读一次。</p>
<p><img src="http://img3.douban.com/lpic/s27226695.jpg" alt=""><br>这一本书其实已经读过几遍，但是每一次读都感觉收获颇丰。由于已经为它专门写过一篇读书笔记，这里就不再赘述。</p>
<p><img src="http://img3.douban.com/lpic/s4401800.jpg" alt=""><br>看这本书完全是因为一位朋友强烈向我推荐冯唐，我似乎已经过了读这个的年纪，除了感受了一把男性视角的青春外，似乎再无所获。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>到今天为止，豆瓣上的已读总算凑到了102本。<br><img src="http://7xkfin.com1.z0.glb.clouddn.com/20150715_douban_read.jpg" alt=""><br>]]>
    
    </summary>
    
      <category term="Review" scheme="http://shellydong.github.io/tags/Review/"/>
    
      <category term="Inbox" scheme="http://shellydong.github.io/categories/Inbox/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读书笔记之资治通鉴·卷一 ——三家分晋，豫让复仇，魏文侯礼贤下士]]></title>
    <link href="http://shellydong.github.io/2015/07/14/Reading-Notes-of-Comprehensive-Mirror-for-Aid-in-Government-Take-1/"/>
    <id>http://shellydong.github.io/2015/07/14/Reading-Notes-of-Comprehensive-Mirror-for-Aid-in-Government-Take-1/</id>
    <published>2015-07-14T12:40:15.000Z</published>
    <updated>2015-09-10T06:58:45.493Z</updated>
    <content type="html"><![CDATA[<h2 id="三家分晋">三家分晋</h2><h3 id="智宣子将以瑶为后">智宣子将以瑶为后</h3><blockquote>
<p>初，智宣子将以瑶为后，智果曰：“不如宵也。瑶之贤于人者五，其不逮者一也。美鬓长大则贤，射御足力则贤，伎艺毕给则贤，巧文辩惠则贤，强毅果敢则贤；如是而甚不仁。夫以其五贤陵人而以不仁行之，其谁能待之？若果立瑶也，智宗必灭。”弗听。智果别族于太史，为辅氏。<br><a id="more"></a><br>当初，晋国的智宣子想以智瑶为继承人，族人智果说：“他不如智宵。智瑶有超越他人的五项长处，只有一项短处。美发高大是长处，精于骑射是长处，才艺双全是长处，能写善辩是长处，坚毅果敢是长处。虽然如此却很不仁厚。如果他以五项长处来制服别人而做不仁不义的恶事，谁能和他和睦相处？要是真的立智瑶为继承人，那么智氏宗族一定灭亡。”智宣子置之不理。智果便向太史请求脱离智族姓氏，另立为辅氏。</p>
</blockquote>
<p><em>论如何正确地摆脱偏爱与偏见，正确认识他人。</em></p>
<h3 id="赵简子立无恤">赵简子立无恤</h3><blockquote>
<p>赵简子之子，长曰伯鲁，幼曰无恤。将置后，不知所立，乃书训戒之辞于二简，以授二子曰：“谨识之！”三年而问之，伯鲁不能举其辞；求其简，已失之矣。问无恤，诵其辞甚习；求其简，出诸袖中而奏之。于是简子以无恤为贤，立以为后。</p>
</blockquote>
<p>赵国的大夫赵简子的儿子，长子叫伯鲁，幼子叫无恤。赵简子想确定继承人，不知立哪位好，于是把他的日常训诫言词写在两块竹简上，分别交给两个儿子，嘱咐说：“好好记住！”过了三年，赵简子问起两个儿子，大儿子伯鲁说不出竹简上的话；再问他的竹简，已丢失了。又问小儿子无恤，竟然背诵竹简训词很熟习；追问竹简，他便从袖子中取出献上。于是，赵简子认为无恤十分贤德，便立他为继承人。</p>
<p><em>如此乖乖背书的无恤，未必算贤。也可能只是单纯地崇拜父亲，于是分外遵从训诫吧，连后来撤退到晋阳也是依其父所言，于此处可见赵简子之非凡。</em></p>
<h3 id="赵简子使尹铎为晋阳">赵简子使尹铎为晋阳</h3><blockquote>
<p>简子使尹铎为晋阳，请曰：“以为茧丝乎？抑为保障乎？”简子曰：“保障哉！”尹铎损其户数。简子谓无恤曰：“晋国有难，而无以尹铎为少，无以晋阳为远，必以为归。”</p>
</blockquote>
<p>赵简子派尹铎去晋阳，临行前尹铎请示说：“您是打算让我去抽丝剥茧般地搜刮财富呢，还是作为保障之地？”赵简子说：“作为保障。”尹铎便少算居民户数，减轻赋税。赵简子又对儿子赵无恤说：“一旦晋国发生危难，你不要嫌尹铎地位不高，不要怕晋阳路途遥远，一定要以那里作为归宿。</p>
<p><em>赵简子牛逼的又一力证。</em></p>
<h3 id="智伯之亡">智伯之亡</h3><blockquote>
<p>臣光曰：智伯之亡也，才胜德也。夫才与德异，而世俗莫之能辨，通谓之贤，此其所以失人也。夫聪察强毅之谓才，正直中和之谓德。才者，德之资也；德者，才之帅也。云梦之竹，天下之劲也；然而不矫揉，不羽括，则不能以入坚。棠之金，天下之利也；然而不熔范，不砥砺，则不能以击强。是故才德全尽谓之“圣人”，才德兼亡谓之“愚人”；德胜才谓之“君子”，才胜德谓之“小人”。凡取人之术，苟不得圣人、君子而与之，与其得小人，不若得愚人。何则？君子挟才以为善，小人挟才以为恶。挟才以为善者，善无不至矣；挟才以为恶者，恶亦无不至矣。愚者虽欲为不善，智不能周，力不能胜，譬如乳狗搏人，人得而制之。小人智足以遂其奸，勇足以决其暴，是虎而翼者也，其为害岂不多哉！夫德者人之所严，而才者人之所爱；爱者易亲，严者易疏，是以察者多蔽于才而遗于德。自古昔以来，国之乱臣，家之败子，才有馀而德不足，以至于颠覆者多矣，岂特智伯哉！故为国为家者苟能审于才德之分而知所先后，又何失人之足患哉！</p>
</blockquote>
<p>臣司马光曰：智瑶的灭亡，在于才胜过德。才与德是不同的两回事，而世俗之人往往分不清，一概而论之曰贤明，于是就看错了人。所谓才，是指聪明、明察、坚强、果毅；所谓德，是指正直、公道、平和待人。才，是德的辅助；德，是才的统帅。云梦地方的竹子，天下都称为刚劲，然而如果不矫正其曲，不配上羽毛，就不能作为利箭穿透坚物。棠地方出产的铜材，天下都称为精利，然而如果不经熔烧铸造，不锻打出锋，就不能作为兵器击穿硬甲。所以，德才兼备称之为圣人；无德无才称之为愚人；德胜过才称之为君子；才胜过德称之为小人。挑选人才的方法，如果找不到圣人、君子而委任，与其得到小人，不如得到愚人。原因何在？因为君子持有才干把它用到善事上；而小人持有才干用来作恶。持有才干作善事，能处处行善；而凭借才干作恶，就无恶不作了。愚人尽管想作恶，因为智慧不济，气力不胜任，好像小狗扑人，人还能制服它。而小人既有足够的阴谋诡计来发挥邪恶，又有足够的力量来逞凶施暴，就如恶虎生翼，他的危害难道不大吗！有德的人令人尊敬，有才的人使人喜爱；对喜爱的人容易宠信专任，对尊敬的人容易疏远，所以察选人才者经常被人的才干所蒙蔽而忘记了考察他的品德。自古至今，国家的乱臣奸佞，家族的败家浪子，因为才有余而德不足，导致家国覆亡的多了，又何止智瑶呢！所以治国治家者如果能审察才与德两种不同的标准，知道选择的先后，又何必担心失去人才呢！</p>
<h3 id="豫让复仇（国士遇我，国士报之）">豫让复仇（国士遇我，国士报之）</h3><blockquote>
<p>三家分智氏之田。赵襄子漆智伯之头，以为饮器。智伯之臣豫让欲为之报仇，乃诈为刑人，挟匕首，入襄子宫中涂厕。襄子如厕心动，索之，获豫让。左右欲杀之，襄子曰：“智伯死无后，而此人欲为报仇，真义士也，吾谨避之耳。”乃舍之。豫让又漆身为癞，吞炭为哑。行乞于市，其妻不识也。行见其友，其友识之，为之泣曰：“以子之才，臣事赵孟，必得近幸。子乃为所欲为，顾不易邪？何乃自苦如此？求以报仇，不亦难乎！”豫让曰：“既已委质为臣，而又求杀之，是二心也。凡吾所为者，极难耳。然所以为此者，将以愧天下后世之为人臣怀二心者也。”襄子出，豫让伏于桥下。襄子至桥，马惊；索之，得豫让，遂杀之。</p>
</blockquote>
<p>赵、韩、魏三家瓜分智家的田土，赵襄子把智瑶的头骨涂上漆，作为饮具。智瑶的家臣豫让想为主公报仇，就化装为罪人，怀揣匕首，混到赵襄子的宫室中打扫厕所。赵襄子上厕所时，忽然心动不安，令人搜索，抓获了豫让。左右随从要将他杀死，赵襄子说：“智瑶已死无后人，而此人还要为他报仇，真是一个义士，我小心躲避他好了。”于是释放豫让。豫让用漆涂身，弄成一个癞疮病人，又吞下火炭，弄哑嗓音。在街市上乞讨，连结发妻子见面也认不出来。路上遇到朋友，朋友认出他，为他垂泪道：“以你的才干，如果投靠赵家，一定会成为亲信，那时你就为所欲为，不是易如反掌吗？何苦自残形体崐以至于此？这样来图谋报仇，不是太困难了吗！”豫让说：“我要是委身于赵家为臣，再去刺杀他，就是怀有二心。我现在这种做法，是极困难的。然而之所以还要这样做，就是为了让天下与后世做人臣子而怀有二心的人感到羞愧。”赵襄子乘车出行，豫让潜伏在桥下。赵襄子到了桥前，马突然受惊，进行搜索，捕获豫让，于是杀死他。</p>
<p><em>其实赤桥伏击后还有一段赵襄子责问豫让的对话，以及最后的斩衣三跃。这一段记载在史记中。</em></p>
<blockquote>
<p>《史记·刺客列传·豫让》 ：襄子至桥，马惊，襄子曰：“此必是豫让也。”使人问之，果豫让也。于是襄子乃数豫让曰：“子不尝事范、中行氏乎？智伯尽灭之，而子不为报雠，而反委质臣于智伯。智伯亦已死矣，而子独何以为之报雠之深也？”豫让曰：“臣事范、中行氏，范、中行氏皆众人遇我，我故众人报之。至于智伯，国士遇我，我故国士报之。”襄子喟然叹息而泣曰：“嗟乎豫子！子之为智伯，名既成矣，而寡人赦子，亦已足矣。子其自为计，寡人不复释子！”使兵围之。豫让曰：“臣闻明主不掩人之美，而忠臣有死名之义。前君已宽赦臣，天下莫不称君之贤。今日之事，臣固伏诛，然原请君之衣而击之，焉以致报雠之意，则虽死不恨。非所敢望也，敢布腹心！”于是襄子大义之，乃使使持衣与豫让。豫让拔剑三跃而击之，曰：“吾可以下报智伯矣！”遂伏剑自杀。死之日，赵国志士闻之，皆为涕泣。</p>
</blockquote>
<h2 id="田子方诫子击（贫贱骄人）">田子方诫子击（贫贱骄人）</h2><blockquote>
<p>子击出，遭田子方于道，下车伏谒。子方不为礼。子击怒，谓子方曰：‘富贵者骄人乎？贫贱者骄人乎？’子方曰：‘亦贫贱者骄人耳，富贵者安敢骄人！国君而骄人则失其国，大夫而骄人则失其家。失其国者未闻有以国待之者也，失其家者未闻有以家待之者也。夫士贫贱者，言不用，行不合，则纳履而去耳，安往而不得贫贱哉！’子击乃谢之。</p>
</blockquote>
<p>魏文侯的公子魏击出行，途中遇见国师田子方，下车伏拜行礼。这可能是受了他爹的影响，表现对贤士的尊敬。不过，田子方不卖给他面子，连回礼都懒得作。作为王位继承人的魏击小朋友像点了火的炮仗一样，怒气冲冲地对田子方说：“富贵的人能对人骄傲呢，还是贫贱的人能对人骄傲？”田子方这人也很有意思。他说：“当然是贫贱的人能对人骄傲啦，富贵的人哪里敢对人骄傲呢！国君对人骄傲就将亡国，大夫对人骄傲就将失家。亡国的人，没有听说有以国主对待他的；失家的人，也没有听说有以家主对待他的。贫贱的游士呢，劝谏不被采纳，君主的行为不合意，就穿上鞋子告辞了，到哪里得不到贫贱呢！”魏击于是谢罪。 </p>
<p><em>子方的回答尽显名士风流</em></p>
<h2 id="论察人之道（璜成争相）">论察人之道（璜成争相）</h2><blockquote>
<p>文侯谓李克曰：“先生尝有言曰：‘家贫思良妻；国乱思良相。’今所置非成则璜，二子何如？”对曰：“卑不谋尊，疏不谋戚。臣在阙门之外，不敢当命。”文侯曰：“先生临事勿让！”克曰：“君弗察故也。居视其所亲，富视其所与，达视其所举，穷视其所不为，贫视其所不取，五者足以定之矣，何待克哉！”文侯曰：“先生就舍，吾之相定矣。”李克出，见翟璜。翟璜曰：“今者闻君召先生而卜相，果谁为之？”克曰：“魏成。”翟璜忿然作色曰：“西河守吴起，臣所进也。君内以邺为忧，臣进西门豹。君欲伐中山，臣进乐羊。中山已拔，无使守之，臣进先生。君之子无傅，臣进屈侯鲋。以耳目之所睹记，臣何负于魏成！”李克曰：“子言克于子之君者，岂将比周以求大官哉？君问相于克，克之对如是。所以知君之必相魏成者，魏成食禄千钟，什九在外，什一在内；是以东得卜子夏、田子方、段干木。此三人者，君皆师之；子所进五人者，君皆臣之。子恶得与魏成比也！”翟璜逡巡再拜曰：“璜，鄙人也，失对，愿卒为弟子！”</p>
</blockquote>
<p>魏文侯问李克：“先生曾经说过：‘家贫思良妻，国乱思良相。’现在我选相不是魏成就是翟璜，这两人怎么样？”李克回答说：“下属不参与尊长的事，外人不过问亲戚的事。臣子我在朝外任职，不敢接受命令。”魏文侯说：“先生不要临事推让！”李克说道：“国君您没有仔细观察呀！看人，平时看他所亲近的，富贵时看他所交往的，显赫时看他所推荐的，穷困时看他所不做的，贫贱时看他所不取的。仅此五条，就足以去断定人，又何必要等我指明呢！”魏文侯说：“先生请回府吧，我的国相已经选定了。”李克离去，遇到翟璜。翟璜问：“听说今天国君召您去征求宰相人选，到底定了谁呢？”李克说：“魏成。”翟璜立刻忿忿不平地变了脸色，说：“西河守令吴起，是我推荐的。国君担心内地的邺县，我推荐西门豹。国君想征伐中山国，我推荐乐羊。中山国攻克之后，没有人去镇守，我推荐了先生您。国君的公子没有老师，我推荐了屈侯鲋。凭耳闻目睹的这些事实，我哪点儿比魏成差！”李克说：“你把我介绍给你的国君，难道是为了结党以谋求高官吗？国君问我宰相的人选，我说了刚才那一番话。我所以推断国君肯定会选中魏成为相，是因为魏成享有千钟的傣禄，十分之九都用在外面，只有十分之一留作家用，所以向东得到了卜子夏、田子方、段干木。这三个人，国君都奉他们为老师；而你所举荐的五人，国君都任用为臣属。你怎么能和魏成比呢！”翟璜听罢徘徊不敢进前，一再行礼说：“我翟璜，真是个粗人，失礼了，愿终身为您的弟子！”</p>
<p><em>不说选相，选择朋友也是一样。又或者应该如此反察自身，看看自己日常有些什么爱好，富贵是否忘礼，贫贱是否逾矩，如果都做得还不错，就能安心睡一觉了。</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="三家分晋">三家分晋</h2><h3 id="智宣子将以瑶为后">智宣子将以瑶为后</h3><blockquote>
<p>初，智宣子将以瑶为后，智果曰：“不如宵也。瑶之贤于人者五，其不逮者一也。美鬓长大则贤，射御足力则贤，伎艺毕给则贤，巧文辩惠则贤，强毅果敢则贤；如是而甚不仁。夫以其五贤陵人而以不仁行之，其谁能待之？若果立瑶也，智宗必灭。”弗听。智果别族于太史，为辅氏。<br>]]>
    
    </summary>
    
      <category term="History" scheme="http://shellydong.github.io/tags/History/"/>
    
      <category term="资治通鉴" scheme="http://shellydong.github.io/tags/%E8%B5%84%E6%B2%BB%E9%80%9A%E9%89%B4/"/>
    
      <category term="Reading Notes" scheme="http://shellydong.github.io/categories/Reading-Notes/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android应用集成友盟页面路径统计]]></title>
    <link href="http://shellydong.github.io/2015/07/13/How-to-get-page-view-using-Umeng/"/>
    <id>http://shellydong.github.io/2015/07/13/How-to-get-page-view-using-Umeng/</id>
    <published>2015-07-13T09:46:22.000Z</published>
    <updated>2015-07-15T10:24:10.136Z</updated>
    <content type="html"><![CDATA[<h2 id="1-_集成准备">1.  集成准备</h2><h3 id="1-1_获得Appkey">1.1  获得Appkey</h3><p>首先需要到友盟官网注册并且添加新应用，获得Appkey<br>不同平台的应用禁止使用相同的Appkey，友盟后台的应用名与实际应用名和包名无关，建议命名为“应用名+平台”。<br><a id="more"></a></p>
<h3 id="1-2_下载SDK">1.2  下载SDK</h3><h3 id="1-3_导入SDK">1.3  导入SDK</h3><p>将下载包中的libs 文件夹合并到本地工程libs子目录下；</p>
<h2 id="2-_基本功能集成">2.  基本功能集成</h2><h3 id="2-1_配置manifest">2.1  配置manifest</h3><p>manifest的配置主要包括添加权限，填写Appkey和填写渠道id三部分，代码示例如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">manifest……</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-sdk</span> <span class="attribute">android:minSdkVersion</span>=<span class="value">"4"</span>&gt;</span><span class="tag">&lt;/<span class="title">uses-sdk</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.ACCESS_NETWORK_STATE"</span>&gt;</span><span class="tag">&lt;/<span class="title">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.ACCESS_WIFI_STATE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.INTERNET"</span>&gt;</span><span class="tag">&lt;/<span class="title">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.READ_PHONE_STATE"</span>&gt;</span><span class="tag">&lt;/<span class="title">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">application</span> ……&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span> ……/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">meta-data</span> <span class="attribute">android:value</span>=<span class="value">"YOUR_APP_KEY"</span> <span class="attribute">android:name</span>=<span class="value">"UMENG_APPKEY"</span>&gt;</span><span class="tag">&lt;/<span class="title">meta-data</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">meta-data</span> <span class="attribute">android:value</span>=<span class="value">"Channel ID"</span> <span class="attribute">android:name</span>=<span class="value">"UMENG_CHANNEL"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">application</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="2-2_session的统计">2.2  session的统计</h3><p>在每个Activity的onResume方法中调用 MobclickAgent.onResume(Context), onPause方法中调用 MobclickAgent.onPause(Context)</p>
<p>确保在所有的Activity中都调用 MobclickAgent.onResume() 和MobclickAgent.onPause()方法，这两个调用将不会阻塞应用程序的主线程，也不会影响应用程序的性能。</p>
<blockquote>
<p>注意<br>如果您的Activity之间有继承或者控制关系请不要同时在父和子Activity中重复添加onPause和onResume方法，否则会造成重复统计，导致启动次数异常增高。(eg.使用TabHost、TabActivity、ActivityGroup时)。<br>当应用在后台运行超过30秒（默认）再回到前端，将被认为是两个独立的session(启动)，例如用户回到home，或进入其他程序，经过一段时间后再返回之前的应用。可通过接口：MobclickAgent.setSessionContinueMillis(long interval) 来自定义这个间隔（参数单位为毫秒）。<br>如果开发者调用Process.kill或者System.exit之类的方法杀死进程，请务必在此之前调用MobclickAgent.onKillProcess(Context context)方法，用来保存统计数据。</p>
</blockquote>
<h3 id="2-3_页面的统计">2.3  页面的统计</h3><p>页面统计集成正确，才能够获取正确的页面访问路径、访问深度（PV）的数据。<br>页面访问路径的数据为全量统计。开发过程中查看测试数据，可以使用友盟集成测试服务。</p>
<p><span id="jump"></span></p>
<h4 id="2-3-1_只由Activity构成的应用">2.3.1  只由Activity构成的应用</h4><p>在Activity中添加</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onResume();</span><br><span class="line">MobclickAgent.onResume(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onPause();</span><br><span class="line">MobclickAgent.onPause(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-3-2_包含Activity、Fragment或View的应用">2.3.2  包含Activity、Fragment或View的应用</h4><ol>
<li>管理Fragment的Activity不能继承BaseActivity，而是直接在Activity的onCreate中调用 <code>MobclickAgent.openActivityDurationTrack(false);</code>禁止默认的页面统计方式，这样将不会再自动统计该Activity。</li>
<li>在Activity中如<a href="#jump">2.3.1</a>一样使用 onResume 和 onPause 方法统计时长</li>
<li>在每个Fragment中添加如下代码</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onResume();</span><br><span class="line">    MobclickAgent.onPageStart(<span class="string">"FragmentName"</span>); <span class="comment">//统计页面</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onPause();</span><br><span class="line">    MobclickAgent.onPageEnd(<span class="string">"FragmentName"</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-4_发送策略">2.4  发送策略</h3><p>在程序的入口 Activity 中添加</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MobclickAgent.updateOnlineConfig( mContext );</span><br></pre></td></tr></table></figure>
<p>Android平台的数据发送策略有两种方式：</p>
<ul>
<li>启动时发送：APP启动时发送当次启动数据和上次的使用时长等缓存数据，当次使用过程中产生的自定义事件数据缓存在客户端，下次启动时发送</li>
<li>按间隔发送：按特定间隔发送数据，间隔时长介于90秒与1天之间，可以在后台自定义发送间隔。</li>
</ul>
<p>在没有取到在线配置的发送策略的情况下，会使用默认的发送策略：启动时发送。</p>
<blockquote>
<p>注意：打开调试模式（debug）后，在集成测试模式中，数据实时发送，不受发送策略控制</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1-_集成准备">1.  集成准备</h2><h3 id="1-1_获得Appkey">1.1  获得Appkey</h3><p>首先需要到友盟官网注册并且添加新应用，获得Appkey<br>不同平台的应用禁止使用相同的Appkey，友盟后台的应用名与实际应用名和包名无关，建议命名为“应用名+平台”。<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://shellydong.github.io/tags/Android/"/>
    
      <category term="Umeng" scheme="http://shellydong.github.io/tags/Umeng/"/>
    
      <category term="Android" scheme="http://shellydong.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读书笔记：Learn More, Study Less]]></title>
    <link href="http://shellydong.github.io/2015/06/30/Reading-Notes-of-Learn-More-Study-Less/"/>
    <id>http://shellydong.github.io/2015/06/30/Reading-Notes-of-Learn-More-Study-Less/</id>
    <published>2015-06-30T12:36:14.000Z</published>
    <updated>2015-07-15T10:24:09.579Z</updated>
    <content type="html"><![CDATA[<p>第一次知道Scott Young这个人，是在战隼的学习探索，当时Scott刚刚因为12个月学完MIT课程而引发高效学习的热议。出于对其人的好奇，点进了他的博客，了解到他已经关注如何提高学习效率好几年，且已经有一些相关书籍，其中最热门的便是<em>Learn More, Study Less</em>。在我第一次阅读完此书后不久，便有了中文译本《如何高效学习》，于是又看了一遍中文版，随后便束之高阁，并未作任何的练习。</p>
<p>直到今年因为工作变动，需要短时间内学习大量Android相关知识，自我感觉效率不高，才又想起这本书来。这一次决定实战练习书中提到的种种高效学习的技巧，顺便记录实战的内容、进度和结果，作为参考。<br><a id="more"></a></p>
<h2 id="读书笔记">读书笔记</h2><h3 id="Part_I:_The_Holistic_Learning_Strategy"><em>Part I: The Holistic Learning Strategy</em></h3><ul>
<li><strong>Constructs</strong> <code>[city,map]</code> A construct defines a set of tightly interlinked understandings. <ul>
<li>Sensory Constructs</li>
<li>Relationship Constructs</li>
<li>Basic Math Constructs</li>
</ul>
</li>
<li><strong>Models</strong> <code>[table of contents]</code> They are snapshots of larger understandings designed to be portable and easy to store</li>
<li><strong>Highways</strong> <code>[reference]</code> linkages between isolated constructs.</li>
<li><strong>The Sequence of Holistic Learning</strong><ul>
<li><strong>Acquire</strong> <code>[reading, taking notes]</code> get accurate information in the most compressed form.<ul>
<li>1) Simplicity</li>
<li>2) Volume</li>
<li>3) Speed</li>
</ul>
</li>
<li><strong>Understand</strong> <code>[basic interlinking]</code> taking raw information and giving it a context.<ul>
<li>when you encounter a tricky subject is to break it into components. Narrow down specifically what you don’t understand so you can use further reading to fill the gaps.</li>
</ul>
</li>
<li><strong>Explore</strong> <code>[form info]</code> form the models, highways and broader connections needed for well defined constructs.<ul>
<li>depth exploration: Information comes from somewhere.</li>
<li>lateral exploration: Information doesn’t stand alone.</li>
<li>vertical exploration: Information follows patterns, those patterns can be found in other information.</li>
</ul>
</li>
<li><strong>Debug</strong> <code>[prunes back connections]</code> looks for errors in your models and highways.<ul>
<li>The only way to debug is to practice</li>
</ul>
</li>
<li><strong>Apply</strong> <code>[use, practice]</code> takes debugging to the final level by making adjustments compared to how this information operates in reality.<ul>
<li>Finding creative ways you can apply what you learn to your own life is the final<br>step of holistic learning.</li>
</ul>
</li>
<li><strong>Test</strong> <code>[valid methodology]</code> identify problems in the system you use for learning, and help you develop new techniques to combat weaknesses.<ul>
<li>Acquire Test - Have I seen/listened to the idea before?</li>
<li>Understand Test - Do I get (at a surface level) what this idea means?</li>
<li>Explore Test - Do I understand where this idea comes from, what it is related to and what outside ideas can be connected with it?</li>
<li>Debug Test - Have I removed inappropriate links between this idea and others?<br>Have I removed false conclusions based on connections that don’t actually exist?</li>
<li>Apply Test - Have I used this idea in my practical life?</li>
</ul>
</li>
<li><strong>Pinpointing Your Weaknesses in the Sequence</strong><ul>
<li><strong>…Acquiring</strong><ul>
<li>1) Reading or listening takes you a long time.</li>
<li>2) You need to re-read textbooks/notes to get all of the basic information.</li>
</ul>
</li>
<li><strong>…Understanding</strong><ul>
<li>1) You’re reading but have no idea what the author is talking about.</li>
<li>2) Your notes (which are perfectly legible) don’t make any sense to you.</li>
</ul>
</li>
<li><strong>…Exploration</strong><ul>
<li>Poor exploration is shown by inflexibility. It happens when you get the gist of an idea, but can’t relate it to other things you have learned.</li>
</ul>
</li>
<li><strong>…Debugging</strong><ul>
<li>Poor debugging is shown by inaccurate connections.</li>
<li>A sign you don’t do enough debugging is if you don’t regularly find yourself to be wrong on a major belief or issue. If you always think you are correct, chances are you aren’t doing enough critical examination of the connections you make.</li>
</ul>
</li>
<li><strong>…Applying</strong><ul>
<li>applying errors are caused when you can’t act on ideas in the real world. Having brilliant theories is useless if you can’t use them anywhere.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>—————————————————未完待续————————————————————</p>
<ul>
<li>Information Structures<ul>
<li>Arbitrary</li>
<li>Opinion</li>
<li>Process</li>
<li>Concrete</li>
<li>Abstract</li>
<li>How to Use the Five Categories</li>
</ul>
</li>
<li>Why Your Classes Are Boring</li>
<li>Goals for Learning    <h3 id="Part_II:_Holistic_Learning_Techniques"><em>Part II: Holistic Learning Techniques</em></h3></li>
<li>Acquiring Information 96<ul>
<li>Speed Reading<ul>
<li>Active Reading</li>
</ul>
</li>
<li>Flow-Based Notetaking</li>
</ul>
</li>
<li>Linking Ideas<ul>
<li>Metaphor</li>
<li>Visceralization</li>
<li>Diagraming<ul>
<li>Concept Diagrams</li>
<li>Flow Diagrams</li>
<li>Image Diagrams</li>
</ul>
</li>
</ul>
</li>
<li>Handling the Arbitrary<ul>
<li>The Link Method<ul>
<li>Steps for Using the Link Method</li>
<li>Challenges With the Link Method</li>
</ul>
</li>
<li>The Peg Method</li>
<li>Information Compression<ul>
<li>Mnemonics</li>
<li>Picture Linking</li>
<li>Notes Compression</li>
</ul>
</li>
</ul>
</li>
<li>Extending Ideas<ul>
<li>Practical Usage</li>
<li>Model Debugging</li>
<li>Project-Based Learning</li>
</ul>
</li>
<li>Review of Holistic Learning Techniques<h3 id="Part_III:_Beyond_Holistic_Learning"><em>Part III: Beyond Holistic Learning</em></h3></li>
<li>The Productive Student<ul>
<li>Manage Your Energy</li>
<li>Don’t “Study”</li>
<li>Nuke Procrastination</li>
<li>Batching</li>
<li>Be Organized</li>
</ul>
</li>
<li>Educate Yourself<ul>
<li>Structuring Learning Habits</li>
<li>Overcoming the Frustration Barrier</li>
<li>Setting Learning Goals</li>
<li>Summary &amp; Self-Education Resources<h3 id="Part_IV:_Summary_&amp;_Quick_Guide"><em>Part IV: Summary &amp; Quick Guide</em></h3></li>
</ul>
</li>
<li>Getting Started<ul>
<li>Starting a Mind Challenge</li>
<li>Set Up a Better Study Routine</li>
<li>Productivity Resources</li>
</ul>
</li>
<li>Recap of Major Concepts<h2 id="Mind_Challenge">Mind Challenge</h2><h3 id="Speed_Reading">Speed Reading</h3></li>
<li>1) Buy one or two books that are similar to the type of material you want to be able to speed read. These will be your books for practice reading.</li>
<li>2) Commit for at least 3 weeks to practice either speed or comprehension exercises(as outlined in Practice Reading) for fifteen minutes a day on your practice books.</li>
<li>3) Also commit to using your finger as a pointer for the next two weeks on all<br>written material on paper.</li>
<li>4) Practice active reading with at least one of your textbooks once a week.</li>
</ul>
<h3 id="Flow-Based_Notetaking">Flow-Based Notetaking</h3><ul>
<li>1) Buy a separate note-book and write “Flow-Based Notetaking Practice” at the top.</li>
<li>2) Commit for two weeks that once per day, you will take your existing notes<br>(written during a class) and transcribe them in a flow-based style. That means taking ideas and writing them down, drawing connections between different ideas.</li>
<li>3) As additional practice, you may want to implement some of the other techniques into your flow-based notetaking style.</li>
</ul>
<h3 id="Metaphor">Metaphor</h3><ul>
<li>1) Commit for at least two weeks to go over a subject you are studying once each day. After you read your textbook or notes, write out at least 3-5 major ideas.</li>
<li>2) With each idea, write out a possible metaphor that could be used to explain it.</li>
<li>3) If the metaphor isn’t complete, try looking for one or two more metaphors that could also associate to the same idea.</li>
<li>4) Use the 10-Year Old Rule. Could you explain this metaphor to a ten year old<br>child? If your metaphor is just as confusing as the original example, repeat it to yourself and rewrite it until you get something that is simple and easy to understand.</li>
<li>5) Repeat this process with the other 2-4 ideas in your textbook until you are<br>satisfied that you understand them.</li>
</ul>
<h3 id="Visceralization">Visceralization</h3><ul>
<li>1) Get a few blank sheets of paper and a pencil for drawing.</li>
<li>2) Pull open your textbook and pick a few key concepts or ideas. If you are just starting with visceralization, pick ideas that are easy for you to form mental images. Completely abstract ideas or incredibly complex ones might be too hard to start with.</li>
<li>3) Form a mental image, add sensations and emotions to your idea as the steps are for visceralization on the previous pages.</li>
<li>4) Quickly sketch a picture of the idea based on your mental image. (30-60 seconds max.)</li>
<li>5) Repeat this with several other ideas each day for a two weeks.</li>
</ul>
<h3 id="Diagraming">Diagraming</h3><ul>
<li>1) Get a sheet of paper and find an idea or set of concepts that could be made into a diagram.</li>
<li>2) Start a timer for no more than 2-5 minutes and begin creating a diagram using one or a combination of the different diagram types.</li>
<li>3) When the timer beeps, stop what you are doing and make a note of the amount of information you’ve managed to store, the clarity of that information and how many different relationships or connections you were able to make.</li>
<li>4) Repeat this exercise once a day for two weeks until you’re comfortable making quick diagrams of several different ideas.</li>
</ul>
<h3 id="Link_Method">Link Method</h3><ul>
<li>1) Pick a formula, list, group or any set of ideas that can be expressed in an ordered sequence.</li>
<li>2) Go through the above steps for creating a linked sequence, breaking it into a list, creating symbols and forming the proper links. Review your linked list to ensure all the ideas are vivid, repetition of symbols is minimal and the symbols are easily decipherable.</li>
<li>3) After your first week of the mind challenge, pick a random list from the previous week or weeks and attempt to go through it until you can reform the original formula, group or list.</li>
<li>4) After the second week you may want to time yourself to improve your speed at<br>using this method.</li>
</ul>
<h3 id="Peg_Method">Peg Method</h3><ul>
<li>1) Pick a list, group or date suitable for using the link method. Make sure it has no more than 13 items if you are trying to store a pegged list.</li>
<li>2) Follow the steps for pegging until you can bring up any number in the list from 0-13 without needing to refer to the original source or other nodes on the list.</li>
<li>3) Repeat this exercise once a day for two weeks, after the first week spend some time trying to reform past dates or lists without referring to the source.</li>
</ul>
<h3 id="Information_Compression">Information Compression</h3><ul>
<li>1) Once per day, go through your textbook or notes and pick out a group of facts you would like to compress. Then create either a mnemonic or picture linking to group the ideas under one theme.</li>
<li>2) After doing this for two weeks, create a notes compression for the last two weeks of material, incorporating the various picture linking or mnemonics you used earlier.</li>
<li>3) Test yourself to see if you can remember the entire group of ideas after using one of these methods to compress several ideas together. Keep doing this process for four weeks (2 notes compressions) or until you feel comfortable with using these methods quickly and easily.</li>
</ul>
<h3 id="Pratical_Usage">Pratical Usage</h3><p>Once a week for the next two months, pick one of your major courses. Spend at<br>least 5-10 minutes creating a list of ways you can use this information in your daily life. Make sure the list has at least 20 ideas and don’t censor yourself in letting them flow. After you’re done this weekly exercise, pick one of those ideas and implement it.</p>
<h3 id="Model_Debugging">Model Debugging</h3><p>If you are already doing regular practice sessions for questions in your classes,<br>continue with what you are doing. Try to implement some of these ideas for improving how you practice, but otherwise keep testing yourself. If you aren’t doing regular practice sessions, or you are doing crash sessions before a test, try spreading your learning out over the entire term. Spend a few minutes each day instead of hours before the test.</p>
<h3 id="Project-Based_Learning">Project-Based Learning</h3><p>Design a project that you expect to take one month to accomplish. Examples could<br>include: </p>
<ul>
<li>E-book</li>
<li>Invention</li>
<li>Design</li>
<li>Program</li>
<li>Website</li>
<li>Blog</li>
</ul>
<p>The project should be simple, but have a sharp learning curve. Write out your<br>deadline for completion and schedule a bit of time each day to work on this project.<br>After you’ve finished the project do a review of the project-based learning method and decide what other projects you might like to tackle.</p>
<h2 id="练习记录">练习记录</h2><h2 id="练习结果">练习结果</h2><h2 id="总结">总结</h2>]]></content>
    <summary type="html">
    <![CDATA[<p>第一次知道Scott Young这个人，是在战隼的学习探索，当时Scott刚刚因为12个月学完MIT课程而引发高效学习的热议。出于对其人的好奇，点进了他的博客，了解到他已经关注如何提高学习效率好几年，且已经有一些相关书籍，其中最热门的便是<em>Learn More, Study Less</em>。在我第一次阅读完此书后不久，便有了中文译本《如何高效学习》，于是又看了一遍中文版，随后便束之高阁，并未作任何的练习。</p>
<p>直到今年因为工作变动，需要短时间内学习大量Android相关知识，自我感觉效率不高，才又想起这本书来。这一次决定实战练习书中提到的种种高效学习的技巧，顺便记录实战的内容、进度和结果，作为参考。<br>]]>
    
    </summary>
    
      <category term="Learn" scheme="http://shellydong.github.io/tags/Learn/"/>
    
      <category term="Read" scheme="http://shellydong.github.io/tags/Read/"/>
    
      <category term="Reading Notes" scheme="http://shellydong.github.io/categories/Reading-Notes/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[When I was one-and-twenty  by A.E. Housman]]></title>
    <link href="http://shellydong.github.io/2015/06/28/When-I-was-one-and-twenty/"/>
    <id>http://shellydong.github.io/2015/06/28/When-I-was-one-and-twenty/</id>
    <published>2015-06-28T13:02:22.000Z</published>
    <updated>2015-07-15T10:24:09.750Z</updated>
    <content type="html"><![CDATA[<pre><code>When I was <span class="keyword">one</span>-and-twenty
I heard a wise <span class="keyword">man</span> say,
"Give crowns and pounds and guineas
But not your heart away;
Give pearls away and rubies
But <span class="keyword">keep</span> your fancy free."
But I was <span class="keyword">one</span>-and-twenty,
<span class="keyword">No</span> <span class="keyword">use</span> to talk to me.

When I was <span class="keyword">one</span>-and-twenty
I heard him say again,
"The heart <span class="keyword">out</span> of the bosom
Was never given <span class="keyword">in</span> vain;
'<span class="keyword">Tis</span> paid with sighs a plenty
And sold <span class="keyword">for</span> endless rue."
And I am <span class="keyword">two</span>-and-twenty,
And oh, '<span class="keyword">tis</span> true, '<span class="keyword">tis</span> true.
</code></pre><a id="more"></a>
<p>第一次读到这首诗是在2014年生日过后不久，喜欢上它其实不需要别的理由，我几乎是用对音乐相同的审美来对待诗，韵和律的和谐足以。 </p>
<p>爱情相关的话题对于我这二十来岁的年纪，充满了致命的吸引力。 爱情，曾经是每一个少年人心中多么瑰丽而又带着一丝幽秘的梦境，年少时曾对它寄予过如此多的期许，却被现实一一回以重击。 于是在这首悲观的诗歌面前，能得到共情的体验，或许也能隔着时空与Housman举杯，自我解嘲似地一笑：“哈，老Housman，原来你也阴沟里翻过船啊！咱们一起落水，同乐，幸甚！~”</p>
<p>两个小节用类似的句型结构，却呈现了截然不同的主观情绪。上一节诗中的我还是一个任性的少年郎，听不进所谓的智者之言，下一节仅仅相隔一年时间，诗中的我却已然沧桑，似乎已饱受爱情的折磨，不胜其扰，意识到那些智者之言，也是字字都是血和泪。 还能怎么着呢？自嘲一笑，叹一声’tis true, ‘tis true……</p>
]]></content>
    <summary type="html">
    <![CDATA[<pre><code>When I was <span class="keyword">one</span>-and-twenty
I heard a wise <span class="keyword">man</span> say,
"Give crowns and pounds and guineas
But not your heart away;
Give pearls away and rubies
But <span class="keyword">keep</span> your fancy free."
But I was <span class="keyword">one</span>-and-twenty,
<span class="keyword">No</span> <span class="keyword">use</span> to talk to me.

When I was <span class="keyword">one</span>-and-twenty
I heard him say again,
"The heart <span class="keyword">out</span> of the bosom
Was never given <span class="keyword">in</span> vain;
'<span class="keyword">Tis</span> paid with sighs a plenty
And sold <span class="keyword">for</span> endless rue."
And I am <span class="keyword">two</span>-and-twenty,
And oh, '<span class="keyword">tis</span> true, '<span class="keyword">tis</span> true.
</code></pre>]]>
    
    </summary>
    
      <category term="Poems" scheme="http://shellydong.github.io/tags/Poems/"/>
    
      <category term="Excerpts" scheme="http://shellydong.github.io/categories/Excerpts/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[写在2015年已经过去了一半的时候]]></title>
    <link href="http://shellydong.github.io/2015/06/24/At-mid-2015/"/>
    <id>http://shellydong.github.io/2015/06/24/At-mid-2015/</id>
    <published>2015-06-24T14:05:38.000Z</published>
    <updated>2015-07-15T10:24:10.001Z</updated>
    <content type="html"><![CDATA[<p><img src="http://society.yunnan.cn/images/attachement/jpg/site2/20120817/001cc435601d11985c4b0f.jpg" alt=""></p>
<h2 id="在年中，回望">在年中，回望</h2><p>又是半年过去。<br><a id="more"></a><br>这半年从武汉到广州，从.NET到Android，可以用动荡来形容。所幸随着时间的流逝，一切渐渐恢复平静。原本计划在这半年里要做的事情都被打乱，计划赶不上变化，也给我带来了一个新的课题，如何在动荡中保持计划的平稳进行。人生总是充满了不期而至的约会，我们要如何才能把握自己的节奏。我想答案只有一个：早起。在一天开始之前便结束计划中要做的事情，剩下的时间再留给琐碎的生活吧。</p>
<p>既是回望，那便不能不说说这半年来的收获了。</p>
<ul>
<li>豆瓣已读达到100</li>
<li>恢复RSS订阅，保证零碎阅读时间</li>
<li>架设博客（没错，就是这个博客了）以及学会使用markdown语法写作</li>
<li>看完公开课《公正》、《聆听音乐》</li>
<li><p>Android入门达成</p>
<h2 id="年终，未为远">年终，未为远</h2><p>下半年的主要任务是学习。<br>年终目标如下：</p>
</li>
<li><p>新概念英语第三册全本课文背诵+默写</p>
</li>
<li>豆瓣已读达到120</li>
<li>Android<ul>
<li>掌握快速开发框架</li>
<li>构建自己的控件库及常用帮助类库</li>
<li>仿游戏开发途上国</li>
<li>解析2个热门开源项目</li>
</ul>
</li>
<li>学习两门公开课</li>
<li>博文50篇+</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://society.yunnan.cn/images/attachement/jpg/site2/20120817/001cc435601d11985c4b0f.jpg" alt=""></p>
<h2 id="在年中，回望">在年中，回望</h2><p>又是半年过去。<br>]]>
    
    </summary>
    
      <category term="Plan" scheme="http://shellydong.github.io/tags/Plan/"/>
    
      <category term="Inbox" scheme="http://shellydong.github.io/categories/Inbox/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何使用Hexo+Github构建博客]]></title>
    <link href="http://shellydong.github.io/2015/06/23/How-to-build-a-blog-using-Hexo-and-Github/"/>
    <id>http://shellydong.github.io/2015/06/23/How-to-build-a-blog-using-Hexo-and-Github/</id>
    <published>2015-06-23T14:24:58.000Z</published>
    <updated>2015-07-15T10:24:09.876Z</updated>
    <content type="html"><![CDATA[<p>终于有自己的博客了，记录一下小窝诞生的过程吧~</p>
<a id="more"></a> 
<h2 id="建站流程">建站流程</h2><h4 id="1-_安装git">1. 安装git</h4><h4 id="2-_安装node-js">2. 安装<a href="https://nodejs.org/download/" target="_blank" rel="external">node.js</a></h4><h4 id="3-_安装hexo">3. 安装hexo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure>
<h4 id="4-_创建Repository">4. 创建Repository</h4><h6 id="以下方式二选一">以下方式二选一</h6><ul>
<li>建立一个 username.github.com 的repo，username为你的github用户名，每个用户只能有一个这样的repo，则直接发布到master分支即可。</li>
<li>建立一个项目repo，发布的branch是gh-pages.<h6 id="自定义域名">自定义域名</h6></li>
<li>如果你用自定义域名的话，github pages需要你建立一个名称为CNAME的文件，里面放入你的域名地址。如我的CNAME文件.</li>
<li>因为每次deploy的时候hexo都会重新生成文件，所以直接加在github是不好使的，这个文件需要放在 hexo folder/source文件夹根目录下。</li>
</ul>
<h4 id="5-_Hexo初始化及操作">5. Hexo初始化及操作</h4><p>修改站点的_config.yml文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deploy:#&#20462;&#25913;_config.yml&#20013;&#20851;&#20110;deploy&#30340;&#37197;&#32622;&#10;  type: git&#10;  repository: https://github.com/ShellyDong/shellydong.github.io.git&#10;  branch: master</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init <span class="comment">#初始化Hexo</span></span><br><span class="line">$ npm install </span><br><span class="line">$ hexo server <span class="comment">#默认端口为4000</span></span><br><span class="line">$ hexo new <span class="string">"My New Post"</span> <span class="comment">#新建博客</span></span><br><span class="line">$ hexo generate <span class="comment">#产生静态页面</span></span><br><span class="line">$ npm install hexo-deployer-git --save  <span class="comment">#安装deployer</span></span><br><span class="line">$ hexo deploy -g  <span class="comment">#重新为变化项产生静态页面后再deploy</span></span><br></pre></td></tr></table></figure>
<h4 id="6-_主题设置">6. 主题设置</h4><p>我使用的是<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">Next</a><br><img src="https://camo.githubusercontent.com/0180dd24aad9b84b3ac176f7df44a53da068bac7/687474703a2f2f696973736e616e2e636f6d2f6e657875732f6e6578742f6465736b746f702d707265766965772e706e67" alt="Next预览"></p>
<h6 id="安装">安装</h6><p>从 GitHub 下载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p>
<p>更改站点 <code>_config.yml</code> 中的 <code>theme</code> 字段设置为 <code>next</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p>
<h6 id="更新">更新</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>终于有自己的博客了，记录一下小窝诞生的过程吧~</p>]]>
    
    </summary>
    
      <category term="Blog" scheme="http://shellydong.github.io/tags/Blog/"/>
    
      <category term="Git" scheme="http://shellydong.github.io/tags/Git/"/>
    
      <category term="Hexo" scheme="http://shellydong.github.io/tags/Hexo/"/>
    
      <category term="Inbox" scheme="http://shellydong.github.io/categories/Inbox/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何使用Hexo+Github构建博客]]></title>
    <link href="http://shellydong.github.io/2015/06/23/How%20to%20build%20a%20blog%20using%20Hexo%20&%20Github/"/>
    <id>http://shellydong.github.io/2015/06/23/How to build a blog using Hexo & Github/</id>
    <published>2015-06-23T14:24:58.000Z</published>
    <updated>2015-07-13T14:08:34.244Z</updated>
    <content type="html"><![CDATA[<p>终于有自己的博客了，记录一下小窝诞生的过程吧~</p>
<a id="more"></a> 
<h2 id="建站流程">建站流程</h2><h4 id="1-_安装git">1. 安装git</h4><h4 id="2-_安装node-js">2. 安装<a href="https://nodejs.org/download/" target="_blank" rel="external">node.js</a></h4><h4 id="3-_安装hexo">3. 安装hexo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure>
<h4 id="4-_创建Repository">4. 创建Repository</h4><h6 id="以下方式二选一">以下方式二选一</h6><ul>
<li>建立一个 username.github.com 的repo，username为你的github用户名，每个用户只能有一个这样的repo，则直接发布到master分支即可。</li>
<li>建立一个项目repo，发布的branch是gh-pages.<h6 id="自定义域名">自定义域名</h6></li>
<li>如果你用自定义域名的话，github pages需要你建立一个名称为CNAME的文件，里面放入你的域名地址。如我的CNAME文件.</li>
<li>因为每次deploy的时候hexo都会重新生成文件，所以直接加在github是不好使的，这个文件需要放在 hexo folder/source文件夹根目录下。</li>
</ul>
<h4 id="5-_Hexo初始化及操作">5. Hexo初始化及操作</h4><p>修改站点的_config.yml文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deploy:#&#20462;&#25913;_config.yml&#20013;&#20851;&#20110;deploy&#30340;&#37197;&#32622;&#10;  type: git&#10;  repository: https://github.com/ShellyDong/shellydong.github.io.git&#10;  branch: master</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init <span class="comment">#初始化Hexo</span></span><br><span class="line">$ npm install </span><br><span class="line">$ hexo server <span class="comment">#默认端口为4000</span></span><br><span class="line">$ hexo new <span class="string">"My New Post"</span> <span class="comment">#新建博客</span></span><br><span class="line">$ hexo generate <span class="comment">#产生静态页面</span></span><br><span class="line">$ npm install hexo-deployer-git --save  <span class="comment">#安装deployer</span></span><br><span class="line">$ hexo deploy -g  <span class="comment">#重新为变化项产生静态页面后再deploy</span></span><br></pre></td></tr></table></figure>
<h4 id="6-_主题设置">6. 主题设置</h4><p>我使用的是<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">Next</a><br><img src="https://camo.githubusercontent.com/0180dd24aad9b84b3ac176f7df44a53da068bac7/687474703a2f2f696973736e616e2e636f6d2f6e657875732f6e6578742f6465736b746f702d707265766965772e706e67" alt="Next预览"></p>
<h6 id="安装">安装</h6><p>从 GitHub 下载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p>
<p>更改站点 <code>_config.yml</code> 中的 <code>theme</code> 字段设置为 <code>next</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p>
<h6 id="更新">更新</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>终于有自己的博客了，记录一下小窝诞生的过程吧~</p>]]>
    
    </summary>
    
      <category term="Blog" scheme="http://shellydong.github.io/tags/Blog/"/>
    
      <category term="Git" scheme="http://shellydong.github.io/tags/Git/"/>
    
      <category term="Hexo" scheme="http://shellydong.github.io/tags/Hexo/"/>
    
      <category term="Inbox" scheme="http://shellydong.github.io/categories/Inbox/"/>
    
  </entry>
  
</feed>
